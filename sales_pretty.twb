<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0313.2002                               -->
<workbook original-version='18.1' source-build='2025.1.0 (20251.25.0313.2002)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top Customers' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
        <range granularity='5' max='20' min='5' />
      </column>
      <column caption='Profit Bin Size' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='200'>
        <calculation class='tableau' formula='200' />
        <range granularity='50' max='200' min='50' />
      </column>
      <column caption='Year selected' datatype='integer' default-format='n0;-0' name='[Parameter 3]' param-domain-type='list' role='measure' type='quantitative' value='2014'>
        <calculation class='tableau' formula='2014' />
        <members>
          <member value='2014' />
          <member value='2015' />
          <member value='2016' />
          <member value='2017' />
        </members>
      </column>
    </datasource>
    <datasource inline='true' name='Sample - Superstore' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Full Project' name='excel-direct.0efa2pt15x4m4e1ax9shb0ivx64o'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/spsan/Downloads/archive/Tableau Full Project.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='sample_-_superstore' name='excel-direct.0bjgvit0sq487s1c6osza0gid0hx'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/spsan/Downloads/tableau/sample_-_superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0bjgvit0sq487s1c6osza0gid0hx' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_699EF99DC68446AE897FB33F229CAA30]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_699EF99DC68446AE897FB33F229CAA30]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Orders_699EF99DC68446AE897FB33F229CAA30]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Orders_699EF99DC68446AE897FB33F229CAA30]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_699EF99DC68446AE897FB33F229CAA30]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_699EF99DC68446AE897FB33F229CAA30]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_699EF99DC68446AE897FB33F229CAA30]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_699EF99DC68446AE897FB33F229CAA30]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_699EF99DC68446AE897FB33F229CAA30]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_699EF99DC68446AE897FB33F229CAA30]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_699EF99DC68446AE897FB33F229CAA30]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_699EF99DC68446AE897FB33F229CAA30]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_699EF99DC68446AE897FB33F229CAA30]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_699EF99DC68446AE897FB33F229CAA30]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_699EF99DC68446AE897FB33F229CAA30]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_699EF99DC68446AE897FB33F229CAA30]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_699EF99DC68446AE897FB33F229CAA30]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_699EF99DC68446AE897FB33F229CAA30]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_699EF99DC68446AE897FB33F229CAA30]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_699EF99DC68446AE897FB33F229CAA30]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_699EF99DC68446AE897FB33F229CAA30]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='customer selected year' datatype='string' name='[Calculation_1217942291222560768]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if year([Order Date]) = [Parameters].[Parameter 3]&#13;&#10;then [Customer Name]&#13;&#10;end' />
      </column>
      <column caption='customer previous year' datatype='string' name='[Calculation_1217942291236708353]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if year([Order Date]) = [Parameters].[Parameter 3] - 1&#13;&#10;then [Customer Name]&#13;&#10;end' />
      </column>
      <column caption='sales for selected year' datatype='real' name='[Calculation_1340383905331679234]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if YEAR([Order Date]) = [Parameters].[Parameter 3]&#13;&#10;then [Sales]&#13;&#10;end' />
      </column>
      <column caption='sales change YoY' datatype='real' name='[Calculation_1340383905498783748]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Calculation_1340383905331679234]) - sum([sales for selected year (copy)_1340383905498349571]))/ sum([sales for selected year (copy)_1340383905498349571])' />
      </column>
      <column caption='selected year' datatype='integer' name='[Calculation_1340383905500241925]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Parameters].[Parameter 3]' />
      </column>
      <column caption='previous year' datatype='integer' name='[Calculation_1340383905500377094]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1340383905500241925] - 1' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='real' name='[Sales]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_699EF99DC68446AE897FB33F229CAA30]' role='measure' type='quantitative' />
      <column caption='sales for previous year' datatype='real' name='[sales for selected year (copy)_1340383905498349571]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if YEAR([Order Date]) = [Parameters].[Parameter 3] - 1&#13;&#10;then [Sales]&#13;&#10;end' />
      </column>
      <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1340383905331679234]' derivation='Sum' name='[sum:Calculation_1340383905331679234:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sales for selected year (copy)_1340383905498349571]' derivation='Sum' name='[sum:sales for selected year (copy)_1340383905498349571:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (MONTH(Order Date))' hidden='true' name='[Action (MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),Region,State)' hidden='true' name='[Action (YEAR(Order Date),Region,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[Region]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <folders-common>
        <folder name='sales'>
          <folder-item name='[Calculation_1340383905331679234]' type='field' />
          <folder-item name='[Calculation_1340383905498783748]' type='field' />
          <folder-item name='[Calculation_1340383905500241925]' type='field' />
          <folder-item name='[Calculation_1340383905500377094]' type='field' />
          <folder-item name='[sales for selected year (copy)_1340383905498349571]' type='field' />
        </folder>
      </folders-common>
      <layout common-percentage='0.884956' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.115044' show-structure='false' user-set-layout-v2='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[Sample - Superstore].[avg:monthly_price:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[Sample - Superstore].[sum:sales for selected year (copy)_1340383905498349571:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[Sample - Superstore].[attr:price:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[Sample - Superstore].[ctd:price:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[Sample - Superstore].[max:price:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[Sample - Superstore].[none:price:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[Sample - Superstore].[sum:price:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[Sample - Superstore]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[Sample - Superstore].[avg:weekly_price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[Sample - Superstore].[avg:price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[Sample - Superstore].[stp:price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[Sample - Superstore].[sum:Calculation_1340383905331679234:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Year selected' datatype='integer' default-format='n0;-0' name='[Parameter 3]' param-domain-type='list' role='measure' type='quantitative' value='2014'>
          <calculation class='tableau' formula='2014' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='Orders' id='Orders_699EF99DC68446AE897FB33F229CAA30'>
            <properties context=''>
              <relation connection='excel-direct.0bjgvit0sq487s1c6osza0gid0hx' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='Sample - Superstore'>
      <datasources>
        <datasource name='Sample - Superstore' />
      </datasources>
      <datasource-dependencies datasource='Sample - Superstore'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
        <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[Sample - Superstore].[none:Category:nk]'>
        <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[Sample - Superstore].[none:Category:nk]' />
      </filter>
      <filter class='categorical' column='[Sample - Superstore].[none:State:nk]'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Alabama&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Arizona&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Arkansas&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;California&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Colorado&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Connecticut&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Delaware&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;District of Columbia&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Florida&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Georgia&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Idaho&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Illinois&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Indiana&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Iowa&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Kansas&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Kentucky&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Louisiana&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Maine&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Maryland&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Massachusetts&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Michigan&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Minnesota&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Mississippi&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Missouri&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Montana&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Nebraska&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Nevada&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;New Hampshire&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;New Jersey&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;New Mexico&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;New York&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;North Carolina&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;North Dakota&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Ohio&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Oklahoma&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Oregon&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Pennsylvania&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Rhode Island&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;South Carolina&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;South Dakota&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Tennessee&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Utah&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Vermont&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Virginia&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Washington&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;West Virginia&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Wisconsin&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;Wyoming&quot;' />
        </groupfilter>
        <target field='[Sample - Superstore].[none:State:nk]' />
      </filter>
      <filter class='categorical' column='[Sample - Superstore].[none:Sub-Category:nk]'>
        <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
        <target field='[Sample - Superstore].[none:Sub-Category:nk]' />
      </filter>
      <filter class='categorical' column='[Sample - Superstore].[yr:Order Date:ok]'>
        <groupfilter function='member' level='[yr:Order Date:ok]' member='2014' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        <target field='[Sample - Superstore].[yr:Order Date:ok]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_282933B269834C6C9C5AD60849007592]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 4' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action3_6047F5B1E1AC47878F2F9B3A4A49628B]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 6' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_EC486A39B08A43339047A6CBA4E027C7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 5' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Year selected' datatype='integer' default-format='n0;-0' name='[Parameter 3]' param-domain-type='list' role='measure' type='quantitative' value='2014'>
              <calculation class='tableau' formula='2014' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='sales for selected year' datatype='real' name='[Calculation_1340383905331679234]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if YEAR([Order Date]) = [Parameters].[Parameter 3]&#13;&#10;then [Sales]&#13;&#10;end' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='real' name='[Sales]' role='dimension' type='ordinal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column caption='sales for previous year' datatype='real' name='[sales for selected year (copy)_1340383905498349571]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if YEAR([Order Date]) = [Parameters].[Parameter 3] - 1&#13;&#10;then [Sales]&#13;&#10;end' />
            </column>
            <column-instance column='[Calculation_1340383905331679234]' derivation='Sum' name='[sum:Calculation_1340383905331679234:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sales for selected year (copy)_1340383905498349571]' derivation='Sum' name='[sum:sales for selected year (copy)_1340383905498349571:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[Sample - Superstore].[none:Category:nk]</column>
            <column>[Sample - Superstore].[none:State:nk]</column>
            <column>[Sample - Superstore].[none:Sub-Category:nk]</column>
            <column>[Sample - Superstore].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' field='[Sample - Superstore].[sum:Calculation_1340383905331679234:qk]' value='left' />
            <format attr='text-format' field='[Sample - Superstore].[sum:Calculation_1340383905331679234:qk]' value='c&quot;$&quot;#,##0,.00K;(&quot;$&quot;#,##0,.00K)' />
            <format attr='text-format' field='[Sample - Superstore].[sum:sales for selected year (copy)_1340383905498349571:qk]' value='c&quot;$&quot;#,##0,.00K;(&quot;$&quot;#,##0,.00K)' />
            <format attr='text-align' field='[Sample - Superstore].[sum:sales for selected year (copy)_1340383905498349571:qk]' value='left' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f0f3fa' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[Sample - Superstore].[sum:Calculation_1340383905331679234:qk]' />
              <text column='[Sample - Superstore].[sum:sales for selected year (copy)_1340383905498349571:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#59a14f' fontsize='12'>SALES</run>
                <run>Æ&#10;&#10;</run>
                <run bold='true' fontcolor='#59a14f' fontsize='14'><![CDATA[<[Sample - Superstore].[sum:Calculation_1340383905331679234:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#59a14f'><![CDATA[<[Sample - Superstore].[sum:sales for selected year (copy)_1340383905498349571:qk]> Prior year]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='left' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C68139B5-1D7E-4FD5-AD19-7821E37A2D61}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Times New Roman'>sales YoY change</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Year selected' datatype='integer' default-format='n0;-0' name='[Parameter 3]' param-domain-type='list' role='measure' type='quantitative' value='2014'>
              <calculation class='tableau' formula='2014' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='sales for selected year' datatype='real' name='[Calculation_1340383905331679234]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if YEAR([Order Date]) = [Parameters].[Parameter 3]&#13;&#10;then [Sales]&#13;&#10;end' />
            </column>
            <column caption='sales change YoY' datatype='real' name='[Calculation_1340383905498783748]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Calculation_1340383905331679234]) - sum([sales for selected year (copy)_1340383905498349571]))/ sum([sales for selected year (copy)_1340383905498349571])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='real' name='[Sales]' role='dimension' type='ordinal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column caption='sales for previous year' datatype='real' name='[sales for selected year (copy)_1340383905498349571]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if YEAR([Order Date]) = [Parameters].[Parameter 3] - 1&#13;&#10;then [Sales]&#13;&#10;end' />
            </column>
            <column-instance column='[Calculation_1340383905498783748]' derivation='User' name='[usr:Calculation_1340383905498783748:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[Sample - Superstore].[none:Category:nk]</column>
            <column>[Sample - Superstore].[none:State:nk]</column>
            <column>[Sample - Superstore].[none:Sub-Category:nk]</column>
            <column>[Sample - Superstore].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[Sample - Superstore].[usr:Calculation_1340383905498783748:qk]' value='n#,##0.000&quot;%&quot;;-#,##0.000&quot;%&quot;' />
            <format attr='text-align' field='[Sample - Superstore].[usr:Calculation_1340383905498783748:qk]' value='left' />
            <format attr='border-style' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#e6ecf0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f3ebf3' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[Sample - Superstore].[usr:Calculation_1340383905498783748:qk]' />
              <text column='[Sample - Superstore].[usr:Calculation_1340383905498783748:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{69B15BA6-A697-4861-B617-C4DC06962AA2}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Times New Roman' fontsize='16'>Sales by month</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Year selected' datatype='integer' default-format='n0;-0' name='[Parameter 3]' param-domain-type='list' role='measure' type='quantitative' value='2014'>
              <calculation class='tableau' formula='2014' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='sales for selected year' datatype='real' name='[Calculation_1340383905331679234]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if YEAR([Order Date]) = [Parameters].[Parameter 3]&#13;&#10;then [Sales]&#13;&#10;end' />
            </column>
            <column caption='sales change YoY' datatype='real' name='[Calculation_1340383905498783748]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Calculation_1340383905331679234]) - sum([sales for selected year (copy)_1340383905498349571]))/ sum([sales for selected year (copy)_1340383905498349571])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='real' name='[Sales]' role='dimension' type='ordinal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column caption='sales for previous year' datatype='real' name='[sales for selected year (copy)_1340383905498349571]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if YEAR([Order Date]) = [Parameters].[Parameter 3] - 1&#13;&#10;then [Sales]&#13;&#10;end' />
            </column>
            <column-instance column='[Calculation_1340383905331679234]' derivation='Sum' name='[sum:Calculation_1340383905331679234:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sales for selected year (copy)_1340383905498349571]' derivation='Sum' name='[sum:sales for selected year (copy)_1340383905498349571:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1340383905498783748]' derivation='User' name='[usr:Calculation_1340383905498783748:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Superstore].[Action (YEAR(Order Date),Region,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_6047F5B1E1AC47878F2F9B3A4A49628B]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Order Date:ok]' />
              <groupfilter function='level-members' level='[Region]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[Sample - Superstore].[none:Category:nk]</column>
            <column>[Sample - Superstore].[none:State:nk]</column>
            <column>[Sample - Superstore].[none:Sub-Category:nk]</column>
            <column>[Sample - Superstore].[Action (YEAR(Order Date),Region,State)]</column>
            <column>[Sample - Superstore].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[Sample - Superstore].[sum:sales for selected year (copy)_1340383905498349571:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[Sample - Superstore].[usr:Calculation_1340383905498783748:qk]' value='sales change YoY'>
              <formatted-text>
                <run>sales change YoY</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sample - Superstore].[usr:Calculation_1340383905498783748:qk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[Sample - Superstore].[sum:Calculation_1340383905331679234:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[Sample - Superstore].[usr:Calculation_1340383905498783748:qk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[Sample - Superstore].[sum:sales for selected year (copy)_1340383905498349571:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <color column='[Sample - Superstore].[usr:Calculation_1340383905498783748:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([Sample - Superstore].[sum:Calculation_1340383905331679234:qk] + [Sample - Superstore].[sum:sales for selected year (copy)_1340383905498349571:qk])</rows>
        <cols>[Sample - Superstore].[mn:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{B33783C1-54DA-446D-B059-432D3F9B1B2D}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='16'>Profit by category and sub category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Superstore].[Action (MONTH(Order Date))]'>
            <groupfilter function='member' level='[mn:Order Date:ok]' member='3' user:ui-action-filter='[Action1_282933B269834C6C9C5AD60849007592]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[Sample - Superstore].[Action (YEAR(Order Date),Region,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_6047F5B1E1AC47878F2F9B3A4A49628B]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Order Date:ok]' />
              <groupfilter function='level-members' level='[Region]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[Sample - Superstore].[Action (MONTH(Order Date))]</column>
            <column>[Sample - Superstore].[none:Category:nk]</column>
            <column>[Sample - Superstore].[none:Sub-Category:nk]</column>
            <column>[Sample - Superstore].[none:State:nk]</column>
            <column>[Sample - Superstore].[Action (YEAR(Order Date),Region,State)]</column>
            <column>[Sample - Superstore].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[Sample - Superstore].[sum:Profit:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sample - Superstore].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([Sample - Superstore].[none:Category:nk] / [Sample - Superstore].[none:Sub-Category:nk])</rows>
        <cols>[Sample - Superstore].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{52A05DDE-AF68-4C12-8846-58F411BFD622}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Times New Roman' fontsize='16'>Profit by state</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Superstore].[Action (MONTH(Order Date))]'>
            <groupfilter function='member' level='[mn:Order Date:ok]' member='3' user:ui-action-filter='[Action1_282933B269834C6C9C5AD60849007592]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[Sample - Superstore].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Sample - Superstore].[Action (MONTH(Order Date))]</column>
            <column>[Sample - Superstore].[none:State:nk]</column>
            <column>[Sample - Superstore].[none:Region:nk]</column>
            <column>[Sample - Superstore].[none:Category:nk]</column>
            <column>[Sample - Superstore].[none:Sub-Category:nk]</column>
            <column>[Sample - Superstore].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[Sample - Superstore].[Longitude (generated)]' field-type='quantitative' max='-5741284.4808001388' min='-17092520.809152033' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[Sample - Superstore].[Latitude (generated)]' field-type='quantitative' max='6202792.253665382' min='3002521.6239010235' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[Sample - Superstore].[sum:Profit:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sample - Superstore].[sum:Profit:qk]' />
              <text column='[Sample - Superstore].[none:State:nk]' />
              <text column='[Sample - Superstore].[sum:Profit:qk]' />
              <lod column='[Sample - Superstore].[none:Region:nk]' />
              <lod column='[Sample - Superstore].[yr:Order Date:ok]' />
              <geometry column='[Sample - Superstore].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Superstore].[Latitude (generated)]</rows>
        <cols>[Sample - Superstore].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F5FD80A1-11B8-4603-9BE1-C2EB49AF2B67}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#59a14f' fontname='Times New Roman' fontsize='16'>Profit by manufacturer</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='None' name='[none:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[Sample - Superstore].[none:Category:nk]</column>
            <column>[Sample - Superstore].[none:State:nk]</column>
            <column>[Sample - Superstore].[none:Sub-Category:nk]</column>
            <column>[Sample - Superstore].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[Sample - Superstore].[sum:Profit:qk]</rows>
        <cols>[Sample - Superstore].[none:Discount:qk]</cols>
      </table>
      <simple-id uuid='{669C8B36-0127-4929-B752-CCE2DCB825FE}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style>
        <style-rule element='dash-text'>
          <format attr='vertical-align' id='dash-text_22' value='center' />
          <format attr='wrap' id='dash-text_22' value='off' />
          <format attr='text-orientation' id='dash-text_22' value='-90' />
          <format attr='text-align' id='dash-text_22' value='center' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Sample - Superstore' />
      </datasources>
      <datasource-dependencies datasource='Sample - Superstore'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
        <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
        <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='16' param='horz' type-v2='layout-flow' w='98934' x='533' y='940'>
            <zone h='98120' id='7' param='horz' type-v2='layout-flow' w='88282' x='533' y='940'>
              <zone h='98120' id='5' type-v2='layout-basic' w='53195' x='533' y='940' />
              <zone fixed-size='527' h='98120' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='35087' x='53728' y='940' />
            </zone>
            <zone fixed-size='160' h='98120' id='15' is-fixed='true' param='vert' type-v2='layout-flow' w='10652' x='88815' y='940'>
              <zone h='7168' id='17' mode='checkdropdown' name='Sheet 6' param='[Sample - Superstore].[none:State:nk]' type-v2='filter' values='database' w='10652' x='88815' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='51469' id='11' name='Sheet 4' w='39547' x='48402' y='48296'>
          <layout-cache cell-count-w='12' minheight='266' non-cell-size-w='157' type-h='scalable' type-w='cell' />
        </zone>
        <zone h='47944' id='14' name='Sheet 6' w='85553' x='2197' y='235'>
          <layout-cache minheight='278' minwidth='202' type-h='scalable' type-w='scalable' />
        </zone>
        <zone h='51234' id='12' name='Sheet 5' w='47936' x='1198' y='48179'>
          <layout-cache minwidth='262' type-h='fixed' type-w='scalable' />
        </zone>
        <zone h='8343' id='18' mode='checkdropdown' name='Sheet 6' param='[Sample - Superstore].[none:Region:nk]' type-v2='filter' values='database' w='10652' x='88948' y='8813' />
        <zone h='14101' id='19' name='Sheet 5' param='[Sample - Superstore].[none:Category:nk]' type-v2='filter' values='database' w='10652' x='88815' y='16451' />
        <zone h='8343' id='20' mode='checkdropdown' name='Sheet 5' param='[Sample - Superstore].[none:Sub-Category:nk]' type-v2='filter' values='database' w='10652' x='88748' y='32550' />
        <zone h='10928' id='21' mode='slider' name='Sheet 6' param='[Sample - Superstore].[yr:Order Date:ok]' type-v2='filter' values='database' w='10652' x='88615' y='40776' />
        <zone forceUpdate='true' h='35958' id='22' type-v2='text' w='7190' x='3329' y='5875'>
          <formatted-text>
            <run fontalignment='1' fontcolor='#e15759' fontname='Times New Roman' fontsize='16'>Superstore Dashboard</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='24' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='23' param='vert' type-v2='layout-flow' w='98934' x='533' y='940'>
                <zone h='7168' id='17' mode='checkdropdown' name='Sheet 6' param='[Sample - Superstore].[none:State:nk]' type-v2='filter' values='database' w='10652' x='88815' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8343' id='18' mode='checkdropdown' name='Sheet 6' param='[Sample - Superstore].[none:Region:nk]' type-v2='filter' values='database' w='10652' x='88948' y='8813'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10928' id='21' mode='slider' name='Sheet 6' param='[Sample - Superstore].[yr:Order Date:ok]' type-v2='filter' values='database' w='10652' x='88615' y='40776'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47944' id='14' is-fixed='true' name='Sheet 6' w='85553' x='2197' y='235'>
                  <layout-cache minheight='278' minwidth='202' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='35958' id='22' type-v2='text' w='7190' x='3329' y='5875'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#e15759' fontname='Times New Roman' fontsize='16'>Superstore Dashboard</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14101' id='19' mode='checkdropdown' name='Sheet 5' param='[Sample - Superstore].[none:Category:nk]' type-v2='filter' values='database' w='10652' x='88815' y='16451'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8343' id='20' mode='checkdropdown' name='Sheet 5' param='[Sample - Superstore].[none:Sub-Category:nk]' type-v2='filter' values='database' w='10652' x='88748' y='32550'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51234' id='12' is-fixed='true' name='Sheet 5' w='47936' x='1198' y='48179'>
                  <layout-cache minwidth='262' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51469' id='11' is-fixed='true' name='Sheet 4' w='39547' x='48402' y='48296'>
                  <layout-cache cell-count-w='12' minheight='266' non-cell-size-w='157' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C439389C-F0A2-4E4B-A6CD-499496D60F38}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8DBC0DE4-C0FB-4696-B9E2-8E245A2ED24E}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[Sample - Superstore].[usr:Calculation_1340383905498783748:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{EA283714-413A-4A25-9C7A-74DC0AE8F2C8}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[Sample - Superstore].[usr:Calculation_1340383905498783748:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[:Measure Names]</field>
            <field>[Sample - Superstore].[mn:Order Date:ok]</field>
            <field>[Sample - Superstore].[none:Sales:ok]</field>
            <field>[Sample - Superstore].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9BB53D0D-E04A-4BC9-9301-2C6FD29034AD}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[Sample - Superstore].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Calculation_1217942291222560768:nk]</field>
            <field>[Sample - Superstore].[none:Calculation_1217942291236708353:nk]</field>
            <field>[Sample - Superstore].[none:Category:nk]</field>
            <field>[Sample - Superstore].[none:Sub-Category:nk]</field>
            <field>[Sample - Superstore].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E84929DD-3F48-479D-A792-75C0C34AE918}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[Sample - Superstore].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Region:nk]</field>
            <field>[Sample - Superstore].[none:State:nk]</field>
            <field>[Sample - Superstore].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0C942AF6-F0DA-486C-A28E-336EFE210F90}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Country:nk]</field>
            <field>[Sample - Superstore].[none:Postal Code:ok]</field>
            <field>[Sample - Superstore].[none:Region:nk]</field>
            <field>[Sample - Superstore].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{42440811-D655-4401-9BD9-18F8D73771E6}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[Sample - Superstore].[mn:Order Date:ok]</field>
                    </x-fields>
                    <y-fields>
                      <field>[Sample - Superstore].[sum:Calculation_1340383905331679234:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[Sample - Superstore].[mn:Order Date:ok]</field>
                    <field>[Sample - Superstore].[sum:Calculation_1340383905331679234:qk]</field>
                    <field>[Sample - Superstore].[sum:sales for selected year (copy)_1340383905498349571:qk]</field>
                    <field>[Sample - Superstore].[usr:Calculation_1340383905498783748:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>3</value>
                  <value>55691.009000000027</value>
                  <value>%null%</value>
                  <value>%null%</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Sheet 5' />
        <viewpoint name='Sheet 6'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='14' />
      <simple-id uuid='{1B1DA36C-A964-4D00-9BFC-212645CD56A8}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='106' name='Sheet 2' width='164'>
      iVBORw0KGgoAAAANSUhEUgAAAKQAAABqCAYAAAAyV/qFAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAZM0lEQVR4nO2deVhU1/nHP5mBYd8FWQVUFBVEEXABoygqJlajqa3aLCRpfmqSmsQa01oT
      a2OS1tosNiampqYxiVmMGK1WElcqioKibAoCgsiOLAMMy8Alvz9mwAFmhnHUODX38zw8D3Pn
      nHPPvfO9Z3nvec973w8//PADIiImguRuV0BERBNRkCImhShIEZPCrPcBeVP73aiHiAggtpAi
      JoYoSBGTQhSkiEkhClLEpBAFKWJSiIIUMSlEQYqYFKIgRUwKUZAiJoUoSBGTos+rQ4PplJNX
      8AX7i1IpamxACUjNnfFxmUrE0KlEuXlgri1f7ef84fi31ALgy7wZm4i105YwlY/jN5LCZJYt
      WEGIzoqUknD4BfY26Kmr/RLWxczHvfuAkqpru/km/zj58lpaOgGpPR5O4UT4z2SS12DsxUf1
      rmCcIDuvcSjx98TXtfU4LLTXUlQRr/obv4snvPpmvVZ2mlpsGOTkQGndVc6WlhIbqCXhHaOJ
      9LOr2FZcg6B5WGig/PoR9l4/wlnFO6z9Uesk0oVRgpQX/pP4ujakttE8HvEYYxxtMUegta2a
      8qrjJGTv15GzkPOlFWD1EIunDOPYvo2kVKRTG+iF8y1chAp9ra0GVV+xo7gGwWI088KWMdXV
      FUsJtCvrqKw/zfHMr7h2y3URMRajBFlUkw3AmJFLCXeUqo9KsbRwx99nEct9FtAuaMnYeIEM
      BTgHjMdP4k+opxkpJae40PwA06yNvIKbpKL2Es2Ah38csQNdu4+by5zwdpvNI9Nnaq+7yI+C
      USMliUSl4+KqbBRaU8gwl/Y9WlF6klIGEOY1FJAS5DURKblcKK8zphpGIb1PVfeq61nUdGpN
      gblUS+VFfhSMEuTIQTHYAdVFr7EmYT2f5ZyiUNGC/oallAslV8EqirHq/lnqMZFxEsgrSUFu
      TEWMwNUnmgAJCNe3s+7Aat7POkhufRPiKlDTwKguW+oWx8vj5Gw6n0x9cxYnL2Zx8iLIrIOI
      GvV/POSjZYbdnE5mA1j7h+DXdUwSqu62z3OpfRYTtE7LDeUqew8tZK+2r7xX80FEuOp/61ks
      japjy8ndFLYXknm5kMzL25Ga+xMaGMfPh4wUZ9h3ESNvvRQX35W8+bOtrB77IMNsbJACyuYs
      jqauYNWxfZT16g5rS09xBRvCvYJ6lKPqts+RVtZi7DXcNDYDFrH6Zzt4dcISwp3skQFCeyGp
      metYk/A+6cofrSoivTDeDgkgdcHfP44X/eMQOqrJK/yUL7OTqaz7lM8LJvFSwAB1wjoyy3IB
      SExaSKKWojJLUmj1nYKl0ZUxcJbdhcQKD8/5POk5H4QmSsq+YWfGAQpbj7EjK4qNoaMRR5I/
      Pretc5KauRIYsJKXQsYAcKWu8MaXrSmcq+mngOoUMu7WQE5qi7dPHL8dPwdnoLm2gOq7VJWf
      Oka0kC00tICNlZXWFsTSXG2/6RQQACkgL00mDwget4NnfK365KnIWcX6i2lkVwlEeN3ZdknR
      UoPMykXrWySpuQ0WAD8IaJ2Ai9xxjGghazl18kleOvIuCWVXkSvVA67OFmpqDrIt/RRgRoDr
      ULVgW7hUkQ34Mti5rxgB3N3G4kwH50rT+pmp3zr5mctYlbCeXYV5VLV1WQaUNNef5atzuykH
      7AYEMvAO10NEO0a0kFKkkg5a6pPYezpJ66xW5rSYRf7q8WN7CmmVgNVYAnWN75xDCDb/lsSy
      ZLI6wwnp8ZicYGv8iT5ZIvq8mtQzy9Z4ly2RmKkmX+fXcPS8lquzjOZXo4LE8eNdwghBujNj
      ylaGFn/PwaITFDZU0yQAWGBrF0DE0EeZ5XtjcUJrWTKZgLW7hrmnDyMYMdCMxJI0sqoFQgbe
      OTkEh27nVc8EjuSfIFteTn17B2CGlaU/QYMXMCcgDDdRjXeN+3pvNiVuFCByNxFNwCImhShI
      EZNCFKSISSEKUsSkEAUpYlKIghQxKURBipgUoiBFTApRkCImhShIEZNCFKSISSEKUsSkEAUp
      YlKIghQxKURBipgUoiBFTApRkCImhShIEZNCFKSISSEKUsSkEAUpYlKIghQxKURBipgUoiBF
      TApRkCImhShIEZNCFKSISSEKUsSkEAUpYlKIghQxKURBipgUoiBFTIrbJsiKnFUsT0m9XcWJ
      /EQRW0gRk+KWtnQWWi+SmL2LpPI8ypWq2Nm6g7gbEGhdgx6b2gs1FJb9l5OFJ7jUUEWtxrnc
      HCYyPXg+E5wc+mxUL3SUkF94giMlJ7jWVKfeTxxkMlc8XWcwe9SDjLaVGXy9N677Cqfzd5F0
      7TJlLarg9aoA8JOZHbqEcC1ltjed5UjuAVIqC6lqVahCppg74+M2jwUhswiw7FX7xj1sOLST
      Up0BoZpIT3mBrSVysHmIl2f8Cr97oHkxWpCKyn/y1+QEKvUEdOkZKeFmBGnDlKh/scjN0Hxm
      OA5aydqwcGy6j6XycfxGUvSexwL/UW/y2+E+hkVd6JSTlfknthUUozv6nAMR49/hCS9b1Ueh
      iKPJfya+qkZ3yBPJEOZFv06sg0Yt+hFka/n7vJp8jEbcmTn1HeY73xs79RsXWq49la9TEqjs
      NGPgoOf49ehwzK6sYX3DL9k8xoeS0gR2X/quVyYvYmN2EauzUIFLaU+xuUgBNrFEuml+Z8GA
      ATFMC4wm1NEDB5kMEGhtKyEz8y0+KS6jvvgtPnXbzrJBGrFwJDb4eMxj5tCJDHdwxc5MCihp
      bsrlv+ffZW+1nMLsjRxw+ztznQy4bsVRvi0oRokFnl4PM2/4NIbZO2ApEWhVXOR4mqrMlNQP
      GOX2EhHmQMU+dlXVgMSFIf6/4OEhEXjb2mKOkub6VL5JeY/kpgL2nt7FqFmL8DHo/qfxddox
      GgHXgOeZe4+IEYwUpFCZREo74PwoK8IicQYq1N+Zy9zx949jle98GjpuotDm79hfpADMCBkx
      T+OHcWd69CfE9olhLcXSwpfwsNdRtj7BZ1Ud5NUUwKCu4J4hPPKzf2mJ2y3D2jaY2MiXaPpu
      LUdaKsivrQMnQxQJUttonpz0617dshRLm2BiI5dSvm8jKZ0pZFdBhLp3sHNdwtPhc3t1yzKs
      HSN5bGIVxYd2Uqo4S3bjInz6jdXYQmb6+yS3ATYP8eSoofdUTB2jBFmrqFT9Y26Dta5EEgfs
      DR6eCeTmxnMFwGYOsd6aEb+kWoPB38AKK/VVWJpphu7UHkT+Rv2sdeTTg+UMVsTYYqNrrCZx
      x80GaLxxSOn6JK972WoNZQeAjQfuQKlhNUCo2smnxXLAnZnhi+6JcaMmRl2Oq1OASojVBzlS
      fxti+SqTOHJVDpgRHDjvpm5ye/0evqsAcGe891ADcwk0lOwhsRGQRBDmqT3kXR/M9YgRaK88
      qCoTXzzsVcdkMj1iROB6QQIXACSD8LDRmVBFZxa7UhNoBOz8l95TXXUXxo0h3WKJdTxMfH0B
      +48+zhGHCURYKtBz5/UgUJT7DZmdgEUM031s+8/RIadGnk1a/m4OlhajxIGQca/wYD+9bruy
      jsr60yRf3EtibQ2CZAgzo5arxnq3hEBD9ZdsST6kEsugJUztt+tVUlX4LpsysxEwY9CIh3uF
      1Ot7jtz0d0hsAyxieSrk3gx/Z2S8bC9mTHkTqXr22CJPIlEOsJHna4MIH7KQuUNGdoeX00t7
      MgkFFYAZAYHzGK4zj5ZZs8QGN/eHeXj0At3mm+7ZqgZSe/x8l7N41BQG9Ta33CxCOakXNvHZ
      VdXMW+b0KC+EhuqN+y20XuTQ2c3sr6pBUFsIVgz30pG6dwxHB6aEx+m5T//bGB/AXerHtKgt
      hNUlcuzSYZKq82gSQNmcxcnMLE7nTeSRKc8zwUb/D34t9yvSOwHzaGZ3Bew0lE4F9bUZnC0f
      xaDBwTgaqi2hmcrrJzhTPQw3L28sjfpxBRqq97Ej9WuyWzsAC/yHrWHZSH0PopKqax/zYdph
      ygRA4kJoyDri/D2M61zuQW5brMP0lIWcdn6DIMUO9hfmUN8JWMTywuyndD/N7UlsPfAu6Z0w
      OPgDXgowUJBCE/KWcvJKjnD8SiIFrR1ILaN5OuYZQvRMpIQOOU1N10grOUBSwVnKBFWL9vKU
      uXjelCibuJS+jq1qe6TUciwLJq1imqOek3deI/HU6+xS2yNldg/y9ORHCdLVQvexQ2oYwi2i
      eWbmMwTfgyq+rQ2/zCqAyJDX2BC9hEESoO0wZyp1p68o+FbdOk5mpt9NtI5SWxxsAwgLXMaq
      2Hd5ZKANQusxtp05jFxfNjMHHByDiA56mVdmb2C6PSjrPuWdzBzDz61+Q7JZbY/0H7aeN2LX
      9CvGhOOr+bKqBkHiQujYzWyaEadbjFqxJWTsM0y0ANqO8en5VBQ3kft/hTsyEpE6RDDWFqCD
      YrkOg0Z7KgfzrgLgFfAwIcY+7RI3Iv1CARCqL1JkaD7ZcKK8fQForL7UbUftj4rcDWwrkYPE
      hYnjt7I6qL+xcguZaevZW98B0mEsiN7C08Z20eah/Co8FjugsWQLX5Q0GVOKSWOUIKvLvyej
      SY+5p7MJVc9vxiAH7YP12qK9KuO6JIKZQ3QN6KFVUU6DnteTALXNVap/zG26JxN1TeXoH3wI
      1DVfV+ezxiDDT3sS314qUM+KX+Exr/4tAtTtZVexHHBgYsRaZjjc2iRK6hbHMwHugIJzZ9/j
      9G2wupkSxr2pkX/PB8kfY+UwgZkjHiLSzbvrm+5XaEdaAPOJhGjriTszOJiTC4Dr0J/rNbvU
      X/sb63NbGeb3IA/4TsDT1l79ChDalRUUXNnOJ+qy7LzH02WJLL64gm2V/oQGPES09wgGWjlh
      LVXXsa2EzKzNfHZV9WYowHscDt1n1Hx3PpllC1YQov6mtSxJNcQgglkBuh8iTYpKEqkGsIsl
      xsNAe6depPiNWs2cypXsbzjHZ0n78Js2F/fbULIpYJQgrSydkXGVFnkSe08n3TBJlCy6YZaR
      eDIl4kmtXXFtYTzJ7YBkHA8M89d7Lul9ZiBUcrlgO5cLtutMJ3N6lBc0bHMSiRlCeyGpF98m
      9aKuXCqTy9Ihho1fu99QcYpt357Sm9Zr5DusDfSiVqFuhRu/4rX4r/Tm6bkYRQ8SH2LDl5Bx
      bCfF9V/wcc5YVgcauEDExDFKkA5+a3jLu4Ts/P0cuZZBWXM1TYKqOCtLf4YOimHOUB02vs4s
      vs/JRgBch/yc8H5eL7oOf523PS6RXHyAlGtXua7sOlfX8rOxRAydx3TPnuOy4LBPeNP/LKeL
      DpFSVUZ9Wy0t6q5fJnPF03kyUSMe0LpsTRfVTSUGprxB1R0a5kkd5vJ44BneuFhAcc4WDnn0
      Wi30P8ptNfukeRn4hIuI6OAetfeL/K8iClLEpBAFKWJS3LYxpIjI7UBsIUVMClGQIiaFKEgR
      k0IUpIhJcYuCLCUhZY/BK2VERPpDbCFFTArjzD6dcvIub+WzvAtUtXeofFTc5zA3eD4jNP1i
      hXJSL/ydr0vyaBLMsLIZw+zwFcxwvrHqRXF9DzvO7iajuQ2ZdRizw54ldoCtjnOBlc0Y5ox/
      Uf+CWNTbvKR/xsEKlWuFTBZA1LiXWeDR6911p5y8y1vYnmPLoodurOxRUUrC4d14xPQ83lr+
      PusvefCbqfP7rDSvyFnF+otXuz97uC9hcWhvn2xtqFYZlY/4ab9+NWpxxbWLa9nWOJ8XZy8h
      Pe0so0OjaCj8lHw5NwTZeY2ExNfJ9XyWP8wJxlGqpLk+g7Mtcuhafdi4j80nzzB68jb+z1lG
      e+0e3j6xAem0PzPDDlSedr/ln61LeHH2KjzMBOrLPuWdxFcRutNoofUw7x06iEvQMv4QFoCj
      VKC1IZF/nVjLgUldu1R0+cTspW5gKC79rLnsRpnKF+eLmRK5VKfbQ9dKH4CcnNfYdqSWp/S5
      cqhyERuzy8BK3LsY0WWXkl3hxYKwaXiYqbJLzFwJDFjJHI8bqVpLviTR6TmeC+xyvpJh7RjG
      /R5dK/cELuXtw2HMWh50tkKKFEvnn7NijCOH8jJU++C0HuZAxWSWjp+Gh5kUkOHo+RTLhneQ
      0JVGK8NZOOtvPOIfoD63FEv7aTw0xIKMyq4V7OkczoWY6H/wyriJuBh07U2kX/gnFUN+Y/DK
      msDAVSxw1O/KIXIDIwRpjZX5VUrkuuUAdZwpvEKErz7f4UJyKocS6tlz1bWN50T8KjO5BtBS
      R73LSIb0qqW7VyROXWm0YemDZ58eXUDRpsDZyln9OZQFUfMJtDJ89zNFyTY+b5nPUp0uq9qw
      ws/FC0HdAlfkrOLjUkCZy77EOJ6L30w6oOqyV5HQqJm3iYKcv7Du34tZHr+Q5xP+QsJ1zfVs
      pSQcVuVXXP+St/69uO8enZ0ZfH7gr6rV+Zo0/4e/Hr4xIRUUp/ns2FM8H7+Q5Xuf4+2sjB4+
      O4rr/2F71/fxi1l55F2SNTXQuIcNKamqOmetY+W3C1XXeZMY0WU7ETVmJhv/u5rtAdGYa+3q
      SilvGIJT6x62H9tPel0DSokNbm7zeCxsPkNkAHXUd7gysvcCXnMXnDvSVc5a5tZYNZRQQXjP
      FdF23ni1JOt16OqJQM3Vt/ioZia/CTZy1bYykU/OtbFg9iyc+0+tQQtFNdex0szUkc++k/+g
      fugGNk321unDXZG7gY+qx/N4zIsEWklprf2OD5P/iBD1Fx7UaKFbar9ky/laoqds53n7Xtcn
      Gc39vtv4sug6ERpenRXFR8H3d6r72p7G56dOMGT8eyy2t4KOEk6nbmBz7iv8Xv3wlddVMXz0
      n1ni5IqlREl95Re8d3oX3j02yGqmKOtNdrY+wEtzXsXDCHUZNcuWOsxn9YxnGd6RTkHFTt5M
      WM+ukiqNLrSFlvYc0qsdiI54j7cW7OKDn/2NxXZn2Jz8HbVdyaycNVwHunDCseue2k5ikvlu
      Ps7MpF5deLvyKrl5yap9gAxBKOJo0rNsKh7FM1P6TkL65wRb4xeyfP971Ac+zoSb3E4yJ2cT
      e9vmcb/GovRL2V8jC93IYz76fMKzOJ7vwvwJXa24FEvnB1gaPJDvc9M07nUGey9a8Mj0Zwi3
      t9LaI/kMng1XDmv0KKVcKLElwkdVqday71GOWEmkOr/UzJvI8XG4Xjne7TQ3NCCOSBdXdX1l
      OA6MIUxaTrVmg1T9BfvNlrEmLFI9xLp5jN4oQGo5mMigOBqbkwkM9CP13Go2Kl7vfqJgFDHB
      0/DvuuFSFwKDlzL9uw851zSLGbZASy2qbZM0qaO+BVTD0QFMidqA2dn3+dO/C2npNMPKJpCJ
      wwJxpf9BWXv9f3j/1D6kAb/jTwF+Rjrjq/1qGvfx5tFPOO3/u35FWXrxBZar3Sb8vJ7g11EP
      9HgQvEes6H8M2nSFQouhTO1VaUu30fheLqG6u9fwZ05EPw+adTRT7Ndwvm4RPk5AYwpnraJZ
      pW6ar9bmcK5wEef6bKY5mXD1f4LiNPHndpJcW9698h58macAuiaXDr/giVt0pTB+54pupFja
      h7Ew6gneT0ggd/hTDMcHb8fLXK2H0B79mz++Tk0UtQM44WhWTV07PfcEaq+h1szlRssp9SNy
      /EYiNYtp3MMGRz889dRKkO9h06l8oqds6Xf3DIOwm8uKsCI2JO1hkBZzjyaas2ytRckM8FY0
      vGL0vwmwFeMGj+CPhRk86DSa6tIzDPBZ1z1UUApt+v15OrPYlfgt941ZzRvuXa16KQmH3+6Z
      TmZHf/tl9YcRXbbQPUDvgdQCmdCm3lnWnUA3M5KKes+E87lSM0DdJfsTODCftLKeTieKsmSK
      Bgbr2bhToKjoKBY+k3DVlaQzn31nzjA2cuXtEaMaG69niXM6wDtpabTetlJ1YDsY/7Zcinq5
      ubZWZXDV3lv3tetAOnAG4de/41x7KRfKPJmoseXhIKfhZFXqsVoo8sgf8DC/9DR22xnDMaL4
      ND5PeIVdhXnUdKiU2dlRQmraFxT43s9IdSqfYY8RVL6Z9/IKaO0EhBpyMj8ixXUu4y0BpIwI
      mIv8wgYO1LYgINBa+w2bL9QzI2B0d7Off+VLMuqbVD7WQg05OW/wYfU0fqXPU/B6IsmOD9+y
      D3RfpAwPWce0hn/wRemddtIPYurQevae2UNOixIQaK39Dx9mVjJzeKgR3aI/Uf5yEs/v5rzj
      VII0fnkHn2iGFG9mW2GJ6rdCSXP9WfalH1bNws2tsa5OJrWrHopMjp55l+/vwC0wossO5RdR
      Sv594QP+nHGNJgH2Vx5jVMAyfj9s5I0bJQvnselm7E95m5czK1FKbPDxWcYqzZ3B7OayIlJg
      R8rTPNf1piZybQ+Dt4sNHDrzHP9QKBAkNvh4/KLPmIzSzSw/Q7cPdXVdHo0lCTynxUmwuzst
      3czyMyd6fJcSr/5sv4R1MfO1+zpLfIiNiuOjQxtIsL2znn7uw9fy6x+2sOPw11S1d6juz/g/
      Gn1OZ79Y7LI/wnHSip6Clk3h6Rgzvkpdx8vnG1Biga1TOLOD4lQtsWUMjwflsvnw42xvl3Z/
      N71Rt1uysdziivFSElJSGBOh48cTMS06M/j8+EXun2bgXuZ3AXFxxU+FTjl5mTup9I0xWTGC
      6FPz06B0M8vPpDDA/VGWT5hlhC32x0MUpIhJ8f8DREwluBkOEgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='25' name='Sheet 3' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAZCAYAAACB6CjhAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAAaklEQVRYhe3UIQ6AUAwEUSAk3P9aHASFIt8X//E80R1ZNZlsulZVLY3ZtIAmAbSAZp8P
      4x7Cg9F+AQmgBTSfHzBTRy3nc/3hQmi/gATQApoE0AKaBNACmgTQApoE0AKaBNACmgTQApr2
      AV4GXAutQCZQNwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAASHUlEQVR4nO3d6W8b+X3H8ffM8D4liqYk6j5s+dLazjpxNkiKboL0Ahr0UdACeVi0z/oP
      tSiQPCgQtGiObnOn2SS76XY3G9ury7ol6qQkUrzP4Uwf7Fq2YtEWaZI+5vsCBFjU8Ocfyflw
      Zn4z3/kppmmaCGFBiqIo6ovuhBAvUlsCkM/n29GsEBQKBVq509KWAOi63o5mXymmabA0d5+l
      jZ1TH5hhlNjZOXxi+Wopx+/e+y1rW3Ee/3yr1Sqyj/qIrustDYCtZS2JU2IzH3CkDaDPfUC1
      fINUYp/owDCbGzMkUj4m91yY7m7slAgEg3Q5qmQMH5VP3sfkDvsbK/SOTPDOd/+Nb/ztt0jt
      bWIP9DJ9efxFv7TXihwDtEk6mSUcCdETdLO5vERW62b5/kdcu3ULPRHjvXtLbMdi3L37B/zB
      yMnzIt0BdnZ3yVeK3P3DEsPj43RrKT6ajbEZ23yBr+j1JFuANrl8+zb/897/guZherKLQmAA
      m7fI7L0FIuMX8aQPiA4M4PHY6PK7Kehu0vEZdnrCXOxTWal4udDjwVHTOSo5ifa4GBgYfNEv
      67WjPBwGrVarGIbRkkaz2Sx+v78lbQnxuHw+j8fjQVGU527L5XIpJ1sAwzBaFgDTNFvWlhCP
      e7ietiIA8NgukNPpbEmDAJVKBbfb3bL2hHioWq3icrlQ1dYcvspBsLA0CYCwNAmAsDQJgLA0
      CYCwtKZPhCX3t9mKHxHoiaJn42TLJtenp3ForRmeEuKpTJPVpXnS2SITU5dYW17FFejm8uQo
      jayBTQcgnc3SGx1kO7ZGwBdhLKKRyhfp8ToxDEMuiHuNHZdNyrXzX5CmKhBxt2Zno1arUavV
      QNMolnWivQFm7y4ydWua1G4MEzoTgIGhYQ7icWxOP+VynqymEejqRdM0VFXFZpOrLF5XscM8
      iWLt3MvbVYXoaGuuDNA07WQdGx4eZHtzjUhfN+lMllKl2tDKD88RAAWTfMng+tXLlDIJkgWD
      oNvRbHNCNEyvlPGGhxmORtjb2iA8NtG5ANhdPqamJgHwdYXxdTXbkhDNCUWihD77d3R4rKk2
      ZBRIWJoEQFiaBEBYmgRAWJoEQFiaBEBYmgRAWJoEQFiaBEBYmgRAWJoEQFiaBEBYmgRAWJoE
      QFha0wEwTYNsJoNeM9CrZQrFUiv7JcQz6dUK2VweEygWclT18xfpPNR0PUB8Y5mU4aCytYtS
      LWKiMH7lOj6nVIKJTjB5MDeLy6kRtwfIlUooJrwxfaUzJZEOl5P0TgJfwIfdFiLiVymUK7ht
      itQEv+Yan6DCbNn6cFITjIamwnE6hz/oYWh0jOOdGAagNdBe0wEoFMo4nU70iolZPWQpDddv
      RqUm2AIavzGt0rL14aQmWFGoVnUcLid2u8bqwhwOt6/hffqmezU4MYXcrV68MIrCG29+4eTX
      iSabkVEgYWkSAGFpEgBhaRIAYWkSAGFpEgBhaRIAYWkSAGFpEgBhaRIAYWkSAGFpEgBhaRIA
      YWkSAGFpEgBhac3PEpmIs7V3iKk5CdhrpEsmV69exqbKNKmiA0yT2PoKyWSS8PBFjvdieLoi
      jI9EO1MSGezpRTWqpHBTSKQZ6LZxnC8R8jikJPI19yJLIg3DwDAMUFWGxy9SrizgqGTpHZsi
      3clpUjFNtg6zXLnSx/zBIeWKgUtVUT/70bRGKjPFq6SZkshWrQ8P1y9FUagWM5gOP26HyXGp
      TLXWwbtCGEaV/oFBFMVGX9jPccGg3+Pk4XvT+JskXmetXh8URaFSNRge6sdlUzhaXSbcN9i5
      mmBVc9Ad/HRe4J7eAXqabUic20G+SixTaeg5l3tc+Byv59bYG3g0N+/Y5FRTbcitG14hJd0k
      2cAM7QC60ej+urXIMKiwNAmAsDQJgLA0CYCwNAmAsDQJgLA0CYCwNAmAsDQJgLA0CYCwNAmA
      sDQJgLA0CYCwNAmAsLSmL4fOH8dZ3NwnOjhCYnuVfBWmb9zE/Zpeey5eNiabq4tkSzWGB/p4
      sLKB0+3njWuXOlMSub+1i2p3kEzuY3eHuRRRyZbKODSn1AS3iWE0XvJXq7X+s3hZpknd3zvA
      7fcR29xj4vK1zk6T2hUOUs4pmLUy5fIx22WF0VC/TJPaRqpqANWGnqNprf8sXoppUlUFfzCA
      x+elUtbZiW1i1ozWlURWq1VsNlvdFxvqH8OeSePyBlBqZUo6+Fyy0otOUbh89RqZbJFgMEAh
      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
      JDIISGEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29529dV7qn+ey9T87kOcyZFIMYRGWRypIlp7LL1V11q297MDNfGoNB/wF3
      Ps2gegaNASZggL640xe30Rj0TLevy+W6Va5gS7YiFShRiRQpUiLFHMR0eHLeYT5QVtGyrEBR
      FOWzH0DG4fbae60dfmu9a613vUvQNE1DRydLEV93AXR0Xie6AHSyGl0AOlmNLoAsIR6Pv+4i
      bEh0AWQJCwsLr7sIGxJdADpZjS4AnaxGF4BOVqMLQCer0QWgk9XoAtDJanQB6GQ1ugB0shpd
      ADpZjS4AnaxGeHw9QCKR0KfNf4REIhGcTufrLsaG43sC0DQNfY3Mj4+JiQnKy8vXJa9UKoXZ
      bF6XvBRFQdM0DAbDqs7/ngB0fpzc/eLPWD79Yl3yUjUNURDWJS/t4X8Fvp+fua6Gon/zPzz1
      /GfLJh3l8vlTjC0su9N6anby/p66VRQVIErflSFKt2/DY1SRVTBIG6kbohEPPuB6ZxfTIZmG
      nQdpKDAxsRCivrri6afKcXqvDlC2bwee9SnsC6FEYyQHBl93MdYVwWh8ZppnC0BOMpZw8PHH
      P1uDIjlobtu2/HOul88GzHx8uGENrrs2aPF5Tp7spPHQcfbnmZifDZNOJZjz+58tAIONln07
      1qegOmvGqgyn2FgXV2MVHG0qgNlu/jCVx3t1BrqGZnAlZ5lJF7Nrl4trJ++RkSKEEwKtB9+m
      sUTh0h8GaHyvmZ5THQzNiHwyd4et+46Tnr5BTs0eKrxWbnd24GnYSV6sn6v+HOSJXnKa99Hg
      iHGh8wbBhEZhww4Obq1ew2EsjbnBHpyN+6gtcCEKUFhiIb44Q3huhJNfjLAYU9m85zDba3Lp
      v3ya3nE/mmCh9fA7NHgVzp3uYde7B0iP32csHCM6MYxY3UalPMqF3nEEk53t+9+irtCxZqXW
      eTmeSwDq4iCffDIPQHHTfnbaEsRSyvL/VJJEkzKaCjN3e7Hsfosj1UVkYvdJC04OvXcMdWGI
      W5PTNJbkEY8mwOjiyLGDPFjRAly9H0NWli26ZDxORtFQk1HuDAT48PgxSt0SVy7cpnbXITyG
      BF1nbzLXXE3R6vo+T7pL/Asyha0OxO+YkxpIDtrfegsxOMzlsXmoyaWgupWCBjNaYphLN0fY
      dKyMeCyOCihyhLt3Rmk7dJTKQhNdf/Cz7fgHVNg0MsL6dA51no/n+nxEXx0f//TYo7+jQ6NP
      TOeqaGJHbQkAGUHE4yvAYTYQM9swibEXLpwgGqjfuo0ynxM1HmB6ZgR/PIUogOByY1Se9w6e
      BxGnC8ZDacj/7nGXLx+X1UgqbkYyqJCJcLvrKlFJQiRCMFBKhrIV5xipadlGddFyb6B2WzU3
      b15hTNOobGnDZXOvVaF1XpJVfT6iJCGn0yhyivnZBTStEADJID3/RSQJLREnraoYEBA1yMgy
      mVSYBX+YHABBQJIkBEA0mshx5FKx+xA1PivRxQDGNa5Mi+vq6Dp7nZn8gxQ5JcKhxJNNrMAE
      gZzNfLi3ivBcD9+cTTyWQFzRuU8jWIo5cLSBzFwvp+7P0FCiC2Cj8GwBiAbcTvt3DlmL67Hc
      OsNnEwZK3BIunxFBMmC3Wv5ymmjCZnv4WzJis5oBCYfbjgTgqaCSb/j883G2HzhGZXkJ5zr+
      RK/Fg8nixCyJiEYrdnH5QxIMVva0t3K2409czwh4iuo5ku9bo8cAIGDIqWZfS4iub35PLCNQ
      2dROS5kVm2X5vgTJiN2qQk4JvvApPv/8NoUVXtwuF6Ig4XA6kACD0YxF/HYEQiMwNcCZsxMo
      Bidb2vavYZl1XhZ9HiBLuPNfPkP63//v112MdcW6pYmK//fvnppGF0CWMD42tn4zwckkZovl
      2QnXAEWW0eAHZ4IF8enjhGvWhdTZ4AjCMz+GNUMU1zUvNG3V+ekCyBY0FS2TXp+85AxaZp0E
      oCgImobG6gwZXQBZgjY3jXb99LrkZYJVfo4vzrcyW21+ugBWstDP3/3uCjmOZfu1cf+HbC1f
      nQtxKv6AvoEYrds2YXisMkwtDXB9Mpd9rQV/OZgOcuvmFLVtzejzxOuHLoCVqGly6vbx8eH6
      R4cyqTiaZMFkEMmkEmiSGYOWJo0RLRVHMZgxixqKIpNMphCMVpx2C0aLj8ZGL5IIcjpOJJoE
      yYjDYUdTMyQSScLBAAoSTpcTg8FB/ZZNWNCQU2lkTSGVSKIZLLgcVsSHZYnEUwiiAYvNhtUo
      Eo9GSGYUjBY7DqsJYZ28MH8s6AJ4BiM3viFWdpztZTaGezqI5e2hXu6hY84FS1OUtrRhnr9O
      z0Qal9PE0lKKgx++S44yTselBMffr+f2+dOMpw2YBYm6nXspRWG09ypyyEUqHKRo+zvsKo7z
      zdejHP/ZPuZ7LnBlOorHamZpMcbeDz6g2Bjm3NfnSFtcyNEwtsrtHK6Br8/1YbKa0WwFHNu3
      FbNBF8CLoAvgMaZun+OTmRsA7Dj+yx9M5w+m+PDt93CbDQwGXGxt28ymUg+jly8Ty6TJeWSc
      ZojGoGjTJuqrSnFZLWSWJCqa2zi2p4xYcJCegQBa8cppbRvNbVtpLPQye6uD+WQGy1Qvls3H
      OF6fw+L4LW5Pq8iJOIo1l7qmOooLfZgk/eN/UXQBPEbplsPfMYHuDT05XUV9Ex7Lw8cniBgk
      CVEQEB8fjhOdbD+4i6kHc1w/exJv0wEanSAZDIiiAOKTlnKISIaH13to0siZNC6v66GJs3zM
      VriZdnmShbkRTnTf4eg7h/CY9Vf6Imyk1SgbEoMkEY8nSIQecHdk9tFxQXzO2jYTZXYpQ0Vd
      Mztqfcz6o6sqh82Ty+idO6QzSeYnH5AAoksLyBYvTVu3UaAlCcnKqq6dzejVxUqsPupKvruK
      qGTzTsbOneXEcB7Vja3kuEwY1WKK+Us6j68QyW4CwFlYiGoxYcRDeaUd0WDFqtzjxO8uY/BW
      cXBfCZJsoDR/2b/KZPZQWCQiGAxUVRdhAFwFBVisyyaRLa8Yn81ITt42tgQ7+f0/fYnbZ8Nq
      AavTwVznZTrn41RuaaPUZlqf5/QjQneFeENIBCbpve/H7TQzNzmKa1M7W6tynvv88VvXKAvN
      vcIS/gVVVb9vCr4ivv18Vzv69b0WQFVVVFV9uVLprDmixU2OZQF/KExe9VaqSp3Isvzc56se
      H2rLtldYwr+wnlEhvn0GaxYVIpFIsLS09PIl09lQhEIh3O71WYcgy/KqP8gX5dvKerUtjm4C
      ZQmj3d0UxV98Vd5qyGQyGJ8jIsNaoCoqGiCtMrrIc8lU01RioSCJhzOObocNQQBNVYhHQsRl
      EY/HhaimCAajGB0eLFoSxWjHanzTBppUYuEwqtG2PLP6AmdqmkYiHsdstSEoKeJpAbvd/ELX
      eFVk7g8R/A//4XUXY8PxHF+nwmz/Zf709QVu3bzOmRN/pncqjAYkwlOcOXmWWwPDJJIx7lw4
      y8Ubt5hcjBFZnMQfe34bdcOQ8nPiD3/k9JVe1BdtG1WZCx3fEEoqyIkg03OhdXMK01kdz2wB
      0qF5Lt4N89Off4hVFEhHH/Cnby5Rbt/FnasXmU05aLJZWBjp4fLwIi1NmzAbRAyCBat52S8w
      NDfO4MgM1vxK6iuLUKOz9N4dQ3IV0LCpckO1EkszM+TWNpNZ8hOXFZxGiVRgkomATHBhHpuv
      nIaaIpRIkNmlRfzzC+AoYnNtOeYVVb0gGbHbjQioBGfHGRqbRTO7qd9ch8skMD8/QzIcZjYQ
      p6hmM2VeB6qcYGLoLrMRlcr6RgpdRmZGBpj0JymorKOqwE06ssjde/eJq2Y2NTXjtRs3RAvz
      pvLMLy8RD2HPKcQmiQiCgMmai8ukkhQM5OR4cHnyKMr34s7x4nTnUFxUhNtuYvbuFSZCEJ8f
      oePGEM68AgQ5TiK0QFf3EO68Alga5eqdifW4z+dmdn6BguJKat0yQ4vL/vPxqR66hsPkeHNY
      GrxE72Sc+OIEXb33cXoLSE/30nXvwXeukwiMcXtwHo0Ui/NRXL4CXMocl2+PoykZbpz/irGg
      Ro7LxI3rN8moMqO3LnEvAAW5NqKxJMGxHu75Ic9rZ+T6ZcbDCgPdV4lKLvI8FgJLegvzsjyz
      BVBVBUlckUwQkAQBwWSloCCPafKoLC1ESFvIyQ1RVVUFwLfjSNMTU5TVt9JQsxxrZGmih6H+
      O0xOT6Glo/jtRg5vrVzr+1odWoTZB0k2NzvIMRXQ3TtOS2EDCCLVm1vZVArFuTIdt8YpqzZS
      WlPHpupqqn3whytzyA35T7imGbdT5dL1LuKJEGGzkfS2ElxFNWzd2oyDCBMLt9HSS4zMGGj/
      6TbcIkCKrs/vMJwyMDsMyWgAaTpIgUFjaHIab2sr1SVevfZ/SZ4pAJvNTTjYT4YtGAElHSGY
      UnEYDCSfIwNR+m6oFE0VKGs5wPH9zass8qsjMdnP0FKIxT//DoBYRmIpVsvK+VVNlhGNNgQy
      j46pioJgNDyxOZWXhrl8P8FbH/0ShzzFF99M88RZFlFEElYu7NBAcnL0n/2MGtvKz/wnVEUD
      DN/p5sR9D28f2Y5541iQbxzPFIDJnU9Lfi9fnb5CTYGN+clhCurbsJqk5xJASVkpp7tuQaIU
      QTRSVZCPPH+BKz0CDiFFypTPjobSNbiVl0PTZAaHljj4wUdszl9ektLfeYrZxSDlmsbMSD93
      lpJMjs5Qf+gdxMAg/ulRBrQE0yP3qdxy4Mn2pGhElCOM379LfPYeC7EfmL2VPNSUaVzquEpV
      ngWDq4xNTQV8feoM8Zoi5HScvIoWkpM3iAhujGYr5uQLxGHSeSLSr371q189LYEgSHhLKnFo
      MaJJGV9FEy2bCpEEMJisuD1u7FYTgiDhdDpx2K0AmO0e3G43DpebEq+NYCCMzZ1PXkE+lWX5
      RAMBFIOd8rISbBvEg1GwOSny5mB46OjmdLmw2GyIoTFG4i48FomKxlYqvDaSwQUmAxFsJjOF
      m5qpLclFFAWcTjdupxOj2YbH7caV68VnEwhGkuRXbqa2sgi3y47D4cRhtyOK0vJvmx1PfjEO
      LU4kKZBfWIC3sIx8q0IomsLuKaSkwIPdaiIajiBLTlpaN2M3Pp8R5O/vx3zz5qt8fG8k+kTY
      cxDo+5K7nvdpX9FQBUcHuJs007a5+vUV7AUY6bxM/vDwuuQlywqGF4kS+BKoqgZo+kzwq0SV
      UyiCGeOKd6oqMoomYFynF/2yjI+PU1HxjBDva0QymcSyTnGBZFlG07RVzzxvDNtjgyMazN+z
      70XpyZ1enTcLXQBZQuTeGD1//08ANP9P/xrJqodpB31F2BPIMDnQy/CDH9ckU3zyASP/8Dkj
      //A5ajrz7BOyhGcKQJWTDHdf4LN//IR//PVvudA7/tKZyuklLp27SkqB2Mxdbg4vbJiPTQnP
      0dU/Qn9/H8oTnYFUJm5c4O7DPdN03myeaQJFF8fpmdT42S//GjETY2YpCWjIsoIkGRAEkOUM
      kmRAVRRUTUVVNUSDEaMkoqoKqqqiKCqCKGE0SGiqTDgURQVshbVs0ZYXhquKTEZWHqUDUOQM
      iqohSgYMBumVz3wuzs5RUF1LZnaasKySa5KITfUwbawm2NcJTgs3Oi6Rdo9wJ7+Ew+8ew6tb
      E28szxSA0WRGjc4ysRChKt9FebETiHL+D2dp/cmH+Mxw/qvf0PrWL5g+/Ufumy0QiqAYi3jv
      w0NE717j0r0pjCJE4wb2vnOc0hXbDSzdu8C19GbebbLT3XmFiYUwqYxGy/5jbHJG+POfzqOY
      zNg9VRw8tgP7D5Z0bXgwP0th3VHcwhS9kzEO1bhIBybp6J+jrX0HjWUechIRIrWH2F6sx3B7
      03mmACyeMt4+qtJ55STX0mY272ijtfrJn6EoOth+6C0qjDB+7QR9k3EqMVHZvJvttWVEhru4
      ODJHacv3P5zw9CiTMYHq2jqUyCQ9PcOU7TSi2MvZ09aI12nnlVe06VmG7gUodQ6TyChMdPeT
      qGoDBCpb99JYZkcU9OWiPyae3QkWRJz51bzz01/wk4ObuX/lFuEfTCthMhsQRQmP204imQZE
      jCYjoiDgdDnIZJ68RiAeC5NRNDRVQbQXs7O5DKu3lh11bqaHejhz/hqRV9p30wiODkJpNTYU
      VFMxbukBS+E0CAJ2h+NhjB4BQdBQFBVN09BnUd5snu0OHXlA/8AEsiZiMEioaEgYgBTpTIbQ
      zCDTwYe1orbcN0hFFrgxGKS62AVoKLKCpqbp7humKP/J20h7fF6UpEppXRONdRUYJREtvAS+
      ana37aPUMMdsZA3v/DE0VaZ/NMquPdtobW2ltbWV5tIcZhYeXx8tkF9RxL2Or/jq1GWC+oDK
      G82zneHMDuSlK3z+6UVMrnx2HT+AHTObG0u59Od/wlFUR0N9JWYJVDXI+S9+ixkrzbsOUuEU
      mSXJwNUz3OsyUda0h11VeYhqhKLSAiQBzK58imQL5rxaDm9L0vHH3yAbPWzftx/BDNPXTnN1
      KU1p4y6anz8KyIsjGNj11nGkFYu5K7ftpxwRkePsetT7FnCWb+Ovft6IqomY12fpq84rYg1d
      IdL0ftlB7vvHKFlx9MGdbubtBbRWFq1NNjqrYqinl5z4ckudu6sZ8RW6cGSpK4REcVMDj9+2
      q6gUo9G6dtnorAqTx4WvdX18gd4k1lQA3orv+/Xbc32vfOhSR2e16L5AWUK4q4db/+p/XJe8
      VE1FFL4/vrL16/+04Tbw0AWwktA4vznRSUZRESQLjbv301SZR2qmj7vpMnZUPXkE6xGayuDQ
      PYrLNuGwbqzesRJLEL838noLocFGW8SsC2AlyQD2ukO8v60QJR3lqz99SY77I8pLWtjxXBfQ
      8C8u4CusBr3b80agC+AJaBrI6TQGkw2DJBC6e5pb0m4OV8h8ffoaZinJzHwYz6bdvNNWR3hq
      gItdtwknVQKyibpmiC2OcvHyLfzxNIVV29i/q567PZ2YBAP3RsbZevRDlm6cpH8uitGax5F3
      j5JnfTMW1/yY0AXwGENXTxDoNyEYLGxq3onPYSKWSZJUNdBUUrLA1r3H2G+NcvrkEElquNN7
      l8YDH1DlNXHx4kUEkgz2DFG0pY1tFoWB61cZDdSQDk4yoVRz4O2fkmsNcMdv5fB7R/AYVAR9
      b6/Xgi6Ax6jd8y7vby0knQjQceYSMwV5rIypLNk85LttQBqLJKERQ1HzKPTZEXi4FjYTY2Jq
      DlHWeACI9gJcBo2IJY/tdY3kOkxAHk2NLgaud5LKiOw4eBjbBoqQly3oAngSDyNemAzLC7yf
      jgU5M8tCIEmpI4N/KYJmtFOSa0Vt2MPOMiex0CJYjA9j/zys6TMJzPkNHGqwEeo/w82JCIWN
      r3KqW+dJ6AJYicHKXO9pPhkQEUSR/JqtlHjtZKIuXKIEgorLaXuYWMLhsiNiYktrLRdO/56r
      Bhd2jxuDZKVx7y46LnzNp5c1vCWb2NtWgM3uwPDtTo6CxvTAFc4/WMLoKGD/kdVtyK3zcuhR
      IbKE7v/0GfF/83frktcPjXa23z/3/JsLPicv6wqhCyBL0MOiPBm916WT1eh9gCxBTWdILQa+
      d9zsy+6Oty6ALGGh4zq3/+Zvv3f8I/+l11CajYMugJUs9PG3v72K17Xsx9C4/0O2lj/P6IyC
      f2YOW0Ex+mTum4UugJWoMt6G/Xx8uH7FoRShUJi0AjanG4fVBHKKQDCErIk4XB6E9Dxd585R
      su8tSnMceJw25GSMUCSGweLA5bQhyUnCaQ0lESODkVyvB4OgkU5ECUXiGCxO3E4rgpomnhYR
      5RgpwYLbIhAIhpE1AYfLg9W0HIpGZ23QBfAMwtP3uNz/AJOkkVStHDy6n1DfFW4+SGAziuSU
      NVIkTjI1P0+8v490xSaayuzcuH6DpCoRDSdobDtEndLHf/xmjuYyJ4mlOYraPmJbbpyrXd2k
      NJFIOEHz3sPUmMf5+mIAsxYkv2EH+dEhbk4nsJlEPGWN7Gwo3WgOlW80ugAeY+r2OT6ZuQHA
      juO/pDq/gppAisVoivD0KPNhGTmewpFbQENtFYW5biQhl8aBeSoOv0WpFWbuXWEhIJOXb0c0
      +OkenKKuBmp3HOZYi4fU4m0ujYWZjY3hD8v4fC5EaYHuwWlqWjTmA0n++hfv4bII3LvchyM3
      n4baagq9bv3jX2N0ATxG6ZbDK0wghYELl1h0VlNelk8qOElGVqnd0YZ1+gFTd67SayzjnfbK
      71wjnUxg9hRQVpYHZWU0uXwQCyKKyxsNfmvDpBNJLJ4Cysp8UFZGszsPGKGsuh6X1YCAxqbt
      bVimHzDV30WvoYS39zby6uPjZQ/6PMBTkYmEMhSWl+Myy/gDCVBVZh/M48gvo6mxnmR4EU0z
      IIgJgoEoqXQGT24ekdASLl8huXaBWOLJsZByvV5CwQAuXyE5Nh6lE0Rx+RN/lFcpzU31pCKL
      aHpcrjVFbwFWYsujoWzljKKZxj0tXOw4waivhtad2/E4jNiMElfOf01MdLCjfR+iaGJL224u
      dX7NUnkr7Vs289ZWlY6Tf0RyFrFrTz6oxVQZlrfbM1h9lBc68JQWcETpe5iumN1thQgGH1VF
      D2dRBRGPU+JKxzdEsbN9734kSa/91xLdFSJL6P79CeL/+eT3ju/9/P9a87zeJFcIXQBZgu4L
      9GT0PoBOVqP3AbKE+fPX6P2f//tHf+/99P8gd2fTayzRxkBvAVaydJ9T3RNPTaJmEvTc7ib1
      5IGdFQnT3Lp8laVnJlwftIxMJhB+9E+VN0a5Xje6AFaSiTIfTDw1iaaqhEJBnrh70ncTEvAv
      kVb1ccuNjG4CPZUktzvOc2fKj6YK1LQfY2epjfjiBCe++A2xRJL8hnaO7azmwd1rdPWNkUgp
      lG45wL6mvEdXCU318dW5m6iikaL63RzYUaM/+A2C/h6eipGy+mYcJUky4XG678+wvXQTJlch
      7fvewq4F+erLLqLNDnoGA9S2bMekJei/08VC9U8eXSURWsBZuZ225gqsJqPe7G4g9HfxFNTY
      Itdv3mZ6boFgJE4yHCUDGEwmTJKEZLGTa5BIxMLMRuNEQ0sEwgnK65twrqhacqtaKbNG6e26
      QGfPKBl94HnDoAvgKaRD86TcFbTv2UWZz4HwcDNXTVFQNJXIg3EmNQM57nxKDCqeqiZ27dxG
      qdeFuOLJJmMxiuq3c/DIfgwLI/quMhsI3QRaicmFNn2ZTz65AeRw7J8foGz4Ir/5vI/K6krK
      S1xIkgG3lOTP//RrJJuPvQf2YTRYaTu0lc7LX3IrJVHTsott+SK+/DzMooioprl55g8sJSXq
      t7Xj21hxc7MafSY4S7j+X37H4v/2/z36e8//82/J2b75leT1Js0E6wLIEnRXiCej9wF0shq9
      D5AlaPE4meHhdclLTqfJmEzrkpeiKMt7Na9y0z9dACvRNNQVFqEgCBtuS5/VkurrY+Hv/+F1
      F2PDoQtgJfM9/J+fdVHqc6KpKkUNbezbVoNJNxR/tOgCeIySlkP8y0N1KHKC86e+xh8pw6UG
      mVkIIpodFBcXYDVCYG6ReDpOLCVQXFaGwyyhKSlmJqdIqAbyi4pxWY1EQ35Eo5nFB0vkV5dh
      +ZG0KD8WdAH8AKJoxGQUQU4yMnqfmGokHRphJtTAgS0+Ok+cxLa5AXNyicGxIG8daWKu5zpj
      KSOWTJj+cT/vHd7O0K2zLKTciLZ8fNVlr/u2dB5DF8BjzA1e48+x+2hyAmvxNrw5DqxJH9d6
      75OILLEkz3Ngiw93XhVbdu/GCVw89QX+uTxuDI5iceYQQ8Y/NsV0+3YSkSg5zW+xqyq7Y3Bu
      VHQBPEZueSP72qoRRAN2h510cJrO2xNs39OOEJri7FD0sTM0JFFCU1VUi4+2fW1IgLBfwm6C
      QE4ehb5nbK+q89rQu3ePYbTY8Xg8uF0ODKKAqshoogEyKWYmRgjFlheSpBMRFuZmGb1zBT9F
      +PK8lJui9E8ESCbjzI5NExdB4C9xgHQ2HroAVuIoZltN3ncO2b0ltFS46Ou7h7m4hUPbNwGQ
      ji8xeOcO42EbRw5sx2q2sfPYOzhj4/T1D5Jx5eIAiqsacK3PkLjOKtBdIVZFlEtf3mLL+wd4
      U3b2un/2LN5r19clL0VRkKT1CZOtqRqgIYirq8t1AawKhUgwjs3j5E2Jhq77Aj0ZvRO8KiSc
      njel7td5GroAsgT5wSyhzmvrk5cskzKsz6elPgw6IK7SBNIF8B1UArNTzAVjiEY7peWlP5rd
      2zNj4wT+3d+/7mJsOH4cb3dN0AhP9HL+5hDRWBz/1D36xpYgFebCtduvu3A6rwi9BXiEyszw
      OCXNh9hZ7n54LMNQ5ykuXBok8GAM36YdtDcUMDlwg95RP/nVLWxvLEMNPWA6acEYGGZGKaS5
      ysbAzZtMBVJUbN5JU00BBkFj4s5V+sYWMbtyqG/cSanXiH98gK7eUdzlm9nRVI1Zj/68rugt
      wCNEqrY0Mdl5khPnOhmaWkTVJCrqWyiu3MSRI0fYWpNPcLSLmzMm2vbvwbDQw5X+eTLhWbou
      X2YoZGJzTQFyOklOSROHD7YTHLvBtD/O0sAFbsxZ2L3vAGXCDIOLaSKzo/TNpGk7eBBneJhb
      9+de90PIOvQW4BECZm8NP/lJLtPTUwxd/5rZ0DH2VVkwmc04nU4gw8jwLPW7fobXI2JuauJS
      7zia04DFW0bbzhYskkA8rjJ+7zqdS3GWgnFy6sLMjabYe7wVn1FAdViZBBZnh7nXM8n06ABK
      KopdqIT6wtf7GLIMXQCP0NA0MNlzqK7PobrSzm9/f59kVd2KNCJGo0YyowIiqpJG05Yfodvr
      w/LQfBm/142n4SiHKl3cuXwKTdMQFRXlMetGFK007X2bfVt0L9HXhS6AR2hM9F2hbzKK02Eh
      GZynaNthrCYrlWKYr851UFqxmdrWbXx56o8sFXiIBsI07HsHITnwnSuZTGYG+9+OFZQAABGD
      SURBVLuIThi5PzhBa8k2GrcX8sXv/kRRgZvw+Dj23VBYXs3t05c4tTSKUUvjqdxOa1Xua7r/
      7ESfCX6EhpJJseRfIplRMFid5HvdSAJkEhHmFkOYXV58LguxoJ9ANInFmYvPY0dLx4kpRpzW
      5dlIOR3Hv7iELFpw2IyYLHYMSoLFpSAZFYKDVwhXf8D+SgvJWJDFQATBaMXrzcVifDVzy3c/
      /QyLPgz6PXQBrBPR6X5OXOwmrYDJUcyx9w7jWccAWSPXb5C/4F+XvDKZzKpdE14UVVXRNG3V
      vke6ALIE3RfoyejDoDpZjS6ALCHYfZfOj/+Gzo//Bjn29E1Asgl9FOg7KIzdvkrv6AIGu49d
      e/fgs73cIwrPTbCkOakszGG0/zb28nryHeY1Ku/zk1oMMHvyEgCarKx7/hsVvQV4hMqDnvP0
      RT0cPPoWO+u8zM6HXvqqsYUpJhfCAJRtasBr05eHbST0FmAFyXgKm92GyWzBXd5AHhDzT9A3
      kWTPtjrii+P0TCdpby3j2skL+LU4S0GFLe1v0VjuZOTyFcbVKAvTIfKqtnJwd/13rt/X00Vx
      /S58VpnbVy9ybyqIu6yBQ3u2kFm8z4XLNwmlRZr2HKW5yvvGLLZ5k9EF8AiR8tZdjJ87z2e9
      nZQ37uLA1hrkdIJAKAaAkk4QCMcAlXA4zZb33ydfiHDi60sU5R8nHlgir+0oh/YIdJ/+iruL
      1fhW5BAKLuGTVUKjPcTzd/KLdidj3efpGQ5gWRimYsdxGktsBEOp1/IEshFdACuQbD4Ov/9z
      1EyCu1f+zB874GD9k9Na7B6cdjMGzOTlSiQSaQTRRq7PgQGorcnn2kLkOwJYRmZycIjuxTHG
      rgOikYZdKtWbqrl49QIz950UV7XgzgV0x9BXji6AR2hEg0uoRgdOm4WqzXUMXAiiCi4URUZV
      FaKhICl5ebxZ0zQ0TSUdDxKKaWyyGAloyxMzipxgbCZAwWYHLDyej0RuQQ6byvbwVkseSjpB
      RjMhykYOv1OOEg9w8cp1ykvf06NJrAO6AB6hEfdPcvH6AElFw2B2sHX/UTyOFKbINf7x12PY
      zQKad9k5LvhggD/8ehpBk2huP0aOVWRKWeL0bz/DlNHwVW3lSL4J/5IBg7o81mAwGhEFgfzN
      e+g7eZZP76iYHT527TuAcWGAK71jpGSB0sbdWPU3sy7oM8Gr4klhUdL0ftlB7vvHKHmNJfsh
      uv7jp0z/zd8C8MHISYxuxyvL602aCdbrmVUhkZuf+9jDE3Hm57E+r/3F8e3fQcvt3wFgcNpe
      c2k2Dt9rAeLxOAsL3zNcdd5wIpHIw0U9r551DYylacvrLfTAWDpPQ3eGezK6CZQlhC50ce39
      f7U+mWk89xBu7b//t3gO7n6lxXkazxTAyPWTXBlcJBaJYLDasdu8HP7gffKfIXA1HadnYJCm
      5q2YVtEahh7cZ3BRZFdL9Yuf/DIoES58dYpMcSuHt1Ujvu6x+PAkl0dVdrdWvFRtpSkqajy5
      ZsVaM5TX65f0zGdavfMdqneoXD11krxtB6j2LY8eaJqKqi5LXRQFBEBDWz4mCKAqhMNhFEVB
      AQRRXA4VrqloLNtuy5vQiQhoqJqKpoEgiIiigJyKE4pKD/PSvhMBTBCEZdtPXb4WCIiSgKZq
      y9cTQFNVWMUmd0n/LAFTDtLiGLJahUkSHo35/6V8oKraw3sQH0Y//8u9iw/zXHmOIAqgqg83
      4VvxzL7dmO8757H8TADJWUpby7LT1vefw3Jw2JXn/1g29VsvVlepqHFunj/P6EKEtCyw8/gH
      VDtSdJ47zUwogyW3lP27W4ktjHHqSz/RWBxrWQsfHWhhoOPX3A64kdIhZGMub793DEt4iK/O
      3CQjCIjWIt7/4PDKzBjs+oabw8urmUoa99G+pZTA/Wucuj6GZNBILBp591//lPsnT1C59z1K
      3UZ6L53GXLub+kL3E2/hh5iZmaOsqhZxrJepuEy100g6MMYfv76MjAFf7U4O11r46psLxDLg
      KG3m/T0V3OrsZGw2SEo1sPPIccrNAb788jxp0YQ7v45DR7fSf+Y3DM1rSGYbu4+8S7ExwIUz
      55lPqAgGJ3sOH6Yi1883vxtFsvhJ+5p4vyLOp/fsfHygivE717l1b4pkRqO0eQ8HGjyc/fIk
      cwkVgymPIz85hM+sW7UvwqqeVnK6j5GUh8aWStT4JL2d97A0yci5W/jFu5vQ5DRqJo3ZVcD2
      9qO4hDBfXbmHBkgmG5t3HaalxMLdrlMshaLM3hpl93s/o9RlYq77JFcGg2y3PswsPsndBTcf
      /NUx7KQ5c+pr5gtMdI/E+Mk//wUuc5xzn1wATFSU+picmaPU5cUfkdn6wgFsM8zNByhvbyfH
      OM65u/NU7vBy58oALe/+nFqXkYycYajzAuVt79BS5CYjy0Sm+5lOmdncsgU5OMqt7lHyW1Rw
      b+LQngZcVitmVMJRhZa2w5Tnu7GYDUz1D2KvaedfNJUSHrvJ+XvjVLQ7ePBgjsO/fIeyPBfM
      dQOQjocZGJulZnMzUiZIV98Au6sbCam57DnQQr7bifkVrSf+MbOqsaNIYIm0nCEZj5PGS8uW
      EuR4FKsnB0kQMBjNSCIYzFasZiOSKCJJy1mJBiN2mw1REDEYDaDILKkiPpsZUTSQX+Al8tD5
      DIBYiITdg8MgIRqtOO0mkvE4RlcObosBYYXpUFRZTmTmAbH5u6S8LbgsL3Z7amiUW72jnPrD
      r/n9hT7G+28TSWXwpwwUuC2IooTZIBJIavjcNkRRxGwyEQuHSKXSJOIxMqZ8ttYXYc+vY0u5
      mZH+65y/fIuYLNG6cyfJ+VEunzvD8GKCeCKB3eVCFATcOTlkkstOcCVVmynJcyOtMGfkTIxw
      KEEqESepmGhtqUO0F7OnpZiFiXucOdXBQlxezevMalYlgJySUrSkTHVjK61Nm7CZRNzefOaG
      75JSVGLhJZLp57yYwUyNLUPPuJ9MOsat7nHKK1a4kOWU4vbfZzKUIBOeYcav4vZ6UBemmAln
      SEaC+CPx5Us5i9nkXOCL09M0bSl+QXdilYmBUbb//L/hv/2vPubj//q/Y1eFynxYoTZP5sbA
      AzJyiqVQgsp8I333pkjLGZYCITx5XtSMRHVTK1saa7CaJbRICFNxPe17D1DIDLORFPGMjZZd
      7bRvLWRsaI7cHA9To6OkVYXRwWGcOcvmmiBK39tVyWRxYTYIFGxqYuuWRnJdVozxMClHITt2
      76O1MM344vM+dJ1vkX71q1/96nkSJqIRnL4CHGYDotVLjujnUscl+kbnKa6updCXh1vwc+pU
      B3NJE2Ul+WQyafJ8eUgoRJIyRXleUokIZk8xDhOkElFMrkIqq0uY6b5A56272Gp2s6vGh5pJ
      khEsFOQXkOeGG5c66B72s+fwUQo9Tkp9Ji58c4qh2QByBCp2NOBAwGBUGJpO0tZS9ahleB40
      VWFyIUJNZdmj0CRmZKKajeqGWsKDV7jY1Y/iKKChsZ7M9G06Lt0kasylpqaGXCnAxfMXGBhd
      pKCiGo9ZoffKea7eHMBatYOW8hwWR7vpuHiV8ZCVvftayPPlIQSGOdPRSdxZzd6ttZglhVhU
      JL/IvVw7yUmCio3KIi9lBXaunjtL98AoJm8JJT47431dXOy8TtBazZ6mUkw/EFt0rucO8rmu
      534e64Xvo+NYqlYfGOzbQYHsigqhpBi9P4rk9CDE57h2J8R7Hx1EjIcY6e8m6mpgZ22Bvjfd
      Cno/+wL133+6LnmpmvbclU/V//o3uNq2rTqv7JwIE43kuoz0DNxBNTlpP7QLK+D3zxAWCmit
      0T/+x3Ht2UrFLz9al7zWcyb4ZXkzWwCdF0Z3hXgyugCyhL67d1BecFRstaTTaUym9VnNoygK
      oCFJqzNm3kwT6FWhqaQzD4cSBQGDwYAIKKr2aBj3TeXmSB//y5/+7nUXY8OhC2Al87f5d5/f
      oCLfhaZk8NXsYt/mHE7fHOX9g7ted+l0XgG6AB6juGk/f3WoDlVOcf70CfzRNjRNYWFqhMWo
      jK+4nDyXBTkVZXpqmlhGoqyqCqdZIhFYIKZCYGERyZFHZakPUZXxz00zF4iTW1RBvseGlo4w
      OjZFRjBRWFJGjl1f/Pu6eLPb9VeJIGKQJARBID49RP/EIlH/FGe7egGF/qvnuDu1RDI0zbnz
      XUTSKrO9Z/iys59wPMrdq+cYD8PS1CB9Q1OkUzGuXbrIfCTGaNclhv0x4qF5ptYg+JbO6tFb
      gMeYvXuFL0J30ZQU7oqdeB0S9tIGDu3dBSk/CxdHIP2ACX8uRz5qxy6CfO5L5gMxJNHJroOH
      2OyCB+ICc3EI3Otm0m8haJUIPZjj/nwLBZpCLJ6krrmZ8vwXc9bTWVt0ATyGr3orb+2tQRAl
      LBYLUvIJMfU1Fe2RGzRIgsQPjaXJgoXWtgNU+ayAgMlixVB5nLyAn+GBy/QMVvCzg02v7H50
      no4ugMcwmCw4HM+ImGAuosB6k+6+IcrtKabCBqo9Np5kzBQVeLl5bxCPsZKEP4CzupTk2BSK
      KwdfXh5T87oD2+tEF8BKnCXsrH3skZjsNNaUL/822GmsLweMbDtwkP6+Ae6HjOw7eogci4RU
      04jycP7HVdKIwQ6+vHYw9TMyOIS9oIJysxO1KIfbA/fJGFzs296wrreo8130ibAs4ZvOc3SM
      Xl+XvNYzKoSqqaCxdlEhZFkmmdyAa0d1XorZ2VkKC9dnD+L1ngnWNA2DYY1mglVVJZXSoxP/
      2FAUZd3e67f+OevBt+7QyioX139PACaTCa/X+3Kl0tlwRKPRdXuvb1ILoE+E6WQ1+iiQzpqz
      2tp4Nay28/stugB01pyX/ShfhJeNg6SbQDpZjS4AnaxGN4GyCg1NTdPd8Q1Dfo2tew9RW+R6
      ua3ItABff3qCRU0DQaSh/V22V7iJLgxz5vw1jEWNHNjdgsO0+rpW0zSUZIjrF26z6a39+CQR
      TdMIz9zjXGcPpoLNHN3XgkmETMzPlXPnmde8HDzcTp7D/NT701uAbEJTuHvha0J52/np27u5
      c/Zr/JmXvKZ/nGjxHv7644/5+F/+NdsrPWTCU5y+cJc9H/wVzXY/Z68P8TKzApGFYc6cOsvg
      vSmiD8f91eQcX18YZN97H9HkXuB05xCqHOPqmQ7cW4/zznYfl85cIfaM6QFdAFmEmk4yljSz
      q7YAiyOfffUm+qdfbnIsNDdLKhPh/uB9pueDqMDS/AK51ZspsBoobW7GPD9H5CXysHpKOPj2
      29QX/iXUZXLmLvaGdrw2C8W1OxBj4yT8D1hyVNFc7MJZtJkad5DpwNOdDXUBZBGaqmA0mzGI
      IggCObluorGXc3sxFTZR68kQCsxzq+MEPRMR0pqGw7K8DZNgtOMSZF5GZkaTFctjQX9T8Rju
      nBwEASTJiMFkIJ1MYnM5kQRAkHC67KRST2/i9D5AFiEIAul0+qGbgkA8HsNoWF04kW+xesvY
      6V2O7JZp8vGnkwPkNIskMw/DNKppEjJrvuu9wWAkFo8DLlRVRc5kkAwGEom/CDqZiD/TKU9v
      AbIIwWQhX0gxNB8mkwzRfS9OXZn12Sf+IDILk2MshJOoSgb/zCySx40314N/ZpxoRiUwNkLI
      62Ot173ZSmqIDPYQScsE5+6jSnnYfAXYlqaYCCVJhSeZWLRQkPt0gevu0FnCcmCsclKhac6c
      vkwgBYV12zm8Y9NL1IIqwen7dF67TSCexugq5MiRg/isKqO3r3J1YBLJ5mPP/v2Ue1e/M+Vk
      73ku9E4SmvVjyvdRWN7K8QObGbt+jlv35xCtPvYdPUSRy8TSRB8dnX0ksdC4Zz9bKvOeOgqk
      CyBLWM/IcG8Sugmkk9XoAtDJanQB6GQ1ugB0shpdADpZjS4AnaxGF4BOVqMLQCer0QWgk9Xo
      AtDJanQB6GQ1ugB0shpdADpZjS4AnaxGF4BOVqMLQCer0QWgk9XoAtDJanQB6GQ1ugB0spr/
      H3CdbJjgP5NMAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
